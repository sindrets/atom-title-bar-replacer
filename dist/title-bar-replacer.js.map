{
  "version": 3,
  "sources": ["../src/main.ts", "../src/TitleBarReplacer.ts", "../src/CssUtils.ts", "../src/types.ts", "../src/Utils.ts", "../src/ThemeManager.ts", "../src/ApplicationMenu.ts", "../src/MenuLabel.ts", "../src/MalformedTemplateError.ts", "../src/MenuItem.ts", "../src/Submenu.ts", "../src/TitleBarReplacerView.ts", "../src/Diff.ts", "../src/MenuUpdater.ts", "../src/config.ts"],
  "sourcesContent": ["import { TitleBarReplacer } from \"./TitleBarReplacer\";\n\nexport { config } from \"./config\";\nexport { ApplicationMenu } from \"./ApplicationMenu\";\nexport { MenuUpdater } from \"./MenuUpdater\";\nexport { Diff, EditToken } from \"./Diff\";\n\nconst titleBarReplacer = new TitleBarReplacer();\n\nexport async function activate(state: any) {\n    titleBarReplacer.activate(state);\n}\n\nexport function deactivate() {\n    titleBarReplacer.deactivate();\n}\n\nexport function serialize() {\n    return titleBarReplacer.serialize();\n}\n\nexport function deserialize(state: { data: any }) {\n    console.log(state.data);\n    titleBarReplacer.deserialize(state.data);\n}\n", "import { CompositeDisposable } from \"atom\";\nimport { ThemeManager } from \"./ThemeManager\";\nimport { TitleBarReplacerView } from \"./TitleBarReplacerView\";\nimport { TbrConfig } from \"./types\";\n\nexport class TitleBarReplacer {\n    public static configState: TbrConfig = new TbrConfig();\n    private subscriptions: CompositeDisposable;\n    private titleBarReplacerView!: TitleBarReplacerView;\n    private initialized: boolean = false;\n\n    public constructor() {\n        this.subscriptions = new CompositeDisposable();\n    }\n\n    public activate(state: any): void {\n        this.titleBarReplacerView = new TitleBarReplacerView(TitleBarReplacer.configState);\n        this.initSubscriptions();\n\n        this.subscriptions.add(\n            atom.workspace.observeActivePane((pane) => {\n                if (!this.initialized) {\n                    let last = performance.now();\n                    (atom.workspace as any).element.prepend(this.titleBarReplacerView.getElement());\n                    this.titleBarReplacerView.updateTransforms();\n                    this.initialized = true;\n                }\n            })\n        );\n\n        if (atom.inDevMode()) {\n            (window as any).titleBarReplacer = this;\n        }\n    }\n\n    public initSubscriptions(): void {\n        this.subscriptions.add(\n            atom.commands.add(\"atom-workspace\", {\n                \"title-bar-replacer:toggle-title-bar\": () => {\n                    TitleBarReplacer.configState.displayTitleBar = !TitleBarReplacer.configState\n                        .displayTitleBar;\n                    this.titleBarReplacerView.setTitleBarVisible(\n                        TitleBarReplacer.configState.displayTitleBar\n                    );\n                },\n                \"title-bar-replacer:toggle-menu-bar\": () => {\n                    TitleBarReplacer.configState.displayMenuBar = !TitleBarReplacer.configState\n                        .displayMenuBar;\n                    this.titleBarReplacerView.setMenuBarVisible(\n                        TitleBarReplacer.configState.displayMenuBar\n                    );\n                },\n                \"title-bar-replacer:auto-select-colors\": () => {\n                    TitleBarReplacer.configState.autoSelectColor = !TitleBarReplacer.configState\n                        .autoSelectColor;\n                    TitleBarReplacer.configState.autoSelectColor\n                        ? ThemeManager.clearCustomColors()\n                        : ThemeManager.applyCustomColors();\n                },\n                \"title-bar-replacer:run-menu-updater\": () => {\n                    this.titleBarReplacerView.updateMenu();\n                },\n                \"title-bar-replacer:force-rebuild-application-menu\": () => {\n                    this.titleBarReplacerView.rebuildApplicationMenu();\n                },\n                \"title-bar-replacer:remove-window-frame\": async () => {\n                    atom.confirm({\n                        message: \"Title Bar Replacer\",\n                        detailedMessage:\n                            \"Hello old user! Thank you for still using title-bar-replacer. As of \" +\n                            \"Atom v1.53 you no longer need to patch Atom in order to remove the \" +\n                            \"window frame. You can now hide the native title bar by going to: \\n\" +\n                            \"Settings > Core > Title Bar\\n \" +\n                            \"And setting it to 'hidden'.\",\n                    });\n                },\n            })\n        );\n        atom.config.observe(\"title-bar-replacer.general.displayTitleBar\", (value) => {\n            TitleBarReplacer.configState.displayTitleBar = value;\n            this.titleBarReplacerView.setTitleBarVisible(value);\n        });\n        atom.config.observe(\"title-bar-replacer.general.displayMenuBar\", (value) => {\n            TitleBarReplacer.configState.displayMenuBar = value;\n            if (!TitleBarReplacer.configState.autoHide) {\n                this.titleBarReplacerView.setMenuBarVisible(value);\n            }\n        });\n        atom.config.observe(\"title-bar-replacer.general.openAdjacent\", (value) => {\n            TitleBarReplacer.configState.openAdjacent = value;\n        });\n        atom.config.observe(\"title-bar-replacer.general.autoHide\", (value) => {\n            TitleBarReplacer.configState.autoHide = value;\n            if (value) {\n                this.titleBarReplacerView.setMenuBarVisible(false);\n            } else {\n                this.titleBarReplacerView.setMenuBarVisible(\n                    TitleBarReplacer.configState.displayMenuBar\n                );\n            }\n        });\n        atom.config.observe(\"title-bar-replacer.general.hideFullscreenTitle\", (value) => {\n            TitleBarReplacer.configState.hideFullscreenTitle = value;\n            if (atom.isFullScreen()) {\n                this.titleBarReplacerView.setTitleBarVisible(!value);\n            }\n        });\n        atom.config.observe(\"title-bar-replacer.general.altGivesFocus\", (value) => {\n            TitleBarReplacer.configState.altGivesFocus = value;\n        });\n        atom.config.observe(\"title-bar-replacer.general.menuBarMnemonics\", (value) => {\n            TitleBarReplacer.configState.menuBarMnemonics = value;\n        });\n        atom.config.observe(\"title-bar-replacer.colors.autoSelectColor\", (value) => {\n            TitleBarReplacer.configState.autoSelectColor = value;\n            value ? ThemeManager.clearCustomColors() : ThemeManager.applyCustomColors();\n        });\n        atom.config.observe(\"title-bar-replacer.colors.baseColor\", (value) => {\n            TitleBarReplacer.configState.baseColor = value;\n            if (!TitleBarReplacer.configState.autoSelectColor && this.initialized) {\n                ThemeManager.applyCustomColors();\n            }\n        });\n        atom.config.observe(\"title-bar-replacer.colors.highlightColor\", (value) => {\n            TitleBarReplacer.configState.highlightColor = value;\n            if (!TitleBarReplacer.configState.autoSelectColor && this.initialized) {\n                ThemeManager.applyCustomColors();\n            }\n        });\n        atom.config.observe(\"title-bar-replacer.colors.textColor\", (value) => {\n            TitleBarReplacer.configState.textColor = value;\n            if (!TitleBarReplacer.configState.autoSelectColor && this.initialized) {\n                ThemeManager.applyCustomColors();\n            }\n        });\n        atom.config.observe(\"title-bar-replacer.colors.style\", (value) => {\n            TitleBarReplacer.configState.titleBarStyle = value;\n            this.titleBarReplacerView.getThemeManager().setTitleBarStyle(value);\n            this.titleBarReplacerView.checkTitleCollision();\n        });\n        atom.config.observe(\"title-bar-replacer.colors.controlTheme\", (value) => {\n            TitleBarReplacer.configState.windowControlTheme = value;\n            this.titleBarReplacerView.getThemeManager().setWindowControlTheme(value);\n        });\n        atom.config.observe(\"title-bar-replacer.colors.controlLocation\", (value) => {\n            TitleBarReplacer.configState.reverseWindowControls = value;\n            this.titleBarReplacerView.getThemeManager().setReverseWindowControls(value);\n        });\n    }\n\n    public deactivate(): void {\n        this.subscriptions?.dispose();\n        this.titleBarReplacerView.deactivate();\n    }\n\n    public serialize(): any {}\n\n    public deserialize(data: any): any {}\n}\n", "export class CssUtils {\n    public static defaultId = \"tbr-style\";\n\n    public static createStyleSheet(id = CssUtils.defaultId, domClass?: string): CSSStyleSheet {\n        const style = document.createElement(\"style\");\n        style.id = id.replace(/[.#]/, \"\");\n\n        if (domClass) {\n            style.classList.add(domClass);\n        }\n\n        style.appendChild(document.createTextNode(\"\"));\n\n        if (document.head) {\n            document.head.appendChild(style);\n        }\n\n        return style.sheet as CSSStyleSheet;\n    }\n\n    public static styleExists(selector = `#${CssUtils.defaultId}`): boolean {\n        return document.querySelector(selector) !== null;\n    }\n\n    public static getStyleSheet(\n        selector = `#${CssUtils.defaultId}`,\n        domClass?: string\n    ): CSSStyleSheet | null {\n        if (!this.styleExists(selector)) return this.createStyleSheet(selector, domClass);\n\n        let query = selector;\n\n        if (domClass) {\n            query += \".\" + domClass;\n        }\n\n        let result = document.querySelector(query) as HTMLStyleElement;\n        let sheet: CSSStyleSheet | null = null;\n\n        if (result) {\n            sheet = result.sheet as CSSStyleSheet;\n        }\n\n        return sheet;\n    }\n\n    public static clearRule(selector: string, id = `#${CssUtils.defaultId}`) {\n        const sheet = this.getStyleSheet(id);\n        if (!sheet) {\n            return;\n        }\n\n        for (let i = 0; i < sheet.cssRules.length; i++) {\n            if ((<CSSStyleRule>sheet.cssRules[i]).selectorText == selector) {\n                sheet.removeRule(i);\n            }\n        }\n        return sheet;\n    }\n}\n", "import { MenuItem } from \"./MenuItem\";\nimport { Submenu } from \"./Submenu\";\n\nexport interface IMenuItem {\n    label?: string;\n    command?: string;\n    commandDetail?: any;\n    type?: \"separator\";\n    enabled?: boolean;\n    visible?: boolean;\n    submenu: IMenuItem[];\n}\n\nexport interface IMenuLabel {\n    label: string;\n    submenu: IMenuItem[];\n}\n\nexport type TMenuLike = IMenuLabel | IMenuItem;\nexport type EqualFunction<T, U> = (a: T, b: U) => boolean;\n\nexport interface IAltKeyData {\n    html: string;\n    name: string;\n    key: string | null;\n}\n\nexport interface TbrWindowControls {\n    minimize: HTMLElement;\n    maximize: HTMLElement;\n    close: HTMLElement;\n}\n\nexport const TbrEvent = Object.freeze({\n    MOUSE_CLICK: Symbol(),\n    MOUSE_ENTER: Symbol(),\n    MOUSE_LEAVE: Symbol(),\n});\n\nexport interface MenuLike {\n    getSubmenu(): Submenu | undefined;\n    addChild(item: MenuItem): void;\n    insertChild(item: MenuItem, index: number): void;\n    removeChild(item: MenuItem): void;\n    removeChild(index: number): void;\n}\n\nexport interface Color {\n    red: number;\n    green: number;\n    blue: number;\n    alpha: number;\n    toHexString(): string;\n    toRGBAString(): string;\n}\n\nexport class TbrConfig {\n    displayTitleBar: boolean = false;\n    displayMenuBar: boolean = false;\n    openAdjacent: boolean = false;\n    autoHide: boolean = false;\n    hideFullscreenTitle: boolean = false;\n    altGivesFocus: boolean = false;\n    menuBarMnemonics: boolean = false;\n    autoSelectColor: boolean = false;\n    baseColor!: Color;\n    highlightColor!: Color;\n    textColor!: Color;\n    titleBarStyle: \"Spacious\" | \"Compact\" = \"Spacious\";\n    windowControlTheme: string = \"\";\n    reverseWindowControls: boolean = false;\n}\n\nexport const titleBarStyle: { readonly [key: string]: { readonly cssId: string } } = {\n    Spacious: {\n        cssId: \"tbr-style-spacious\",\n    },\n    Compact: {\n        cssId: \"tbr-style-compact\",\n    },\n};\n\nexport const windowControlThemes: { readonly [key: string]: { readonly cssClass: string } } = {\n    \"Windows 10\": {\n        cssClass: \"control-theme-windows-10\",\n    },\n    Arc: {\n        cssClass: \"control-theme-arc\",\n    },\n    Yosemite: {\n        cssClass: \"control-theme-yosemite\",\n    },\n    Legacy: {\n        cssClass: \"control-theme-legacy\",\n    },\n};\n\nexport const themeCssSelectors: { readonly [key: string]: readonly string[] } = {\n    base: [\n        \".title-bar-replacer, .title-bar-replacer::before\",\n        \".app-menu .menu-label.open, .app-menu .menu-label:hover, \" +\n            \".app-menu .menu-label.open, .app-menu .menu-label.focused\", //10% darker\n        \".app-menu .menu-label .menu-box\", //ligther\n    ],\n    hi: [\n        \".app-menu .menu-label .menu-box .menu-item.open, .app-menu .menu-label .menu-box \" +\n            \".menu-item.selected\",\n    ],\n    txt: [\n        \".title-bar-replacer\",\n        \".title-bar-replacer .custom-title, .app-menu .menu-label .menu-box hr, \" +\n            \".app-menu .menu-label .menu-box .menu-item .menu-item-keystroke, \" +\n            \".app-menu .menu-label .menu-box .menu-item.disabled\", //subtle\n        \".tbr-title-bar i, .tbr-title-bar i.disabled, .app-menu .menu-label .menu-box \" +\n            \".menu-item\", //highlight\n    ],\n};\n\nexport const exceptionCommands = [\n    \"application:open-terms-of-use\",\n    \"application:open-documentation\",\n    \"application:open-faq\",\n    \"application:open-discussions\",\n    \"application:report-issue\",\n    \"application:search-issues\"\n]\n", "import { IAltKeyData } from \"./types\";\n\nexport class Utils {\n    public static formatAltKey(label: string): IAltKeyData {\n        const m = label.match(/(?<=&)./);\n        const key = m ? m[0] : null;\n        const html = label.replace(`&${key}`, `<u>${key}</u>`);\n        return { html, name: label.replace(\"&\", \"\"), key: key?.toLowerCase() || null };\n    }\n\n    public static setToggleClass(elmnt: HTMLElement, clazz: string, flag: boolean): void {\n        flag ? elmnt.classList.add(clazz) : elmnt.classList.remove(clazz);\n    }\n\n    public static mod(n: number, m: number): number {\n        return ((n % m) + m) % m;\n    }\n\n    public static clamp(v: number, min: number, max: number): number {\n        if (v < min) return min;\n        if (v > max) return max;\n        return v;\n    }\n\n    public static stopEvent(e: Event): void {\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n    public static rangeIntersects(min0: number, max0: number, min1: number, max1: number): boolean {\n        return (\n            Math.max(min0, max0) >= Math.min(min1, max1) &&\n            Math.min(min0, max0) <= Math.max(min1, max1)\n        );\n    }\n\n    public static domRectIntersects(a: DOMRect, b: DOMRect): boolean {\n        return (\n            Utils.rangeIntersects(a.x, a.x + a.width, b.x, b.x + b.width) &&\n            Utils.rangeIntersects(a.y, a.y + a.height, b.y, b.y + b.height)\n        );\n    }\n}\n", "import { TitleBarReplacerView } from \"./TitleBarReplacerView\";\nimport { CssUtils } from \"./CssUtils\";\nimport { titleBarStyle, windowControlThemes, themeCssSelectors, Color } from \"./types\";\nimport { Utils } from \"./Utils\";\n\nexport class ThemeManager {\n    private view: TitleBarReplacerView;\n    private style?: { cssId: string };\n    private controlTheme?: { cssClass: string };\n\n    constructor(view: TitleBarReplacerView) {\n        this.view = view;\n    }\n\n    public setTitleBarStyle(style: string): void {\n        const newStyle = titleBarStyle[style];\n        if (!newStyle) {\n            return;\n        }\n\n        if (this.style) {\n            this.view.getElement().classList.remove(this.style.cssId);\n        }\n\n        this.view.getElement().classList.add(newStyle.cssId);\n        this.style = newStyle;\n    }\n\n    public setWindowControlTheme(theme: string): void {\n        const newTheme = windowControlThemes[theme];\n        if (!newTheme) {\n            return;\n        }\n\n        if (this.controlTheme) {\n            this.view.getElement().classList.remove(this.controlTheme.cssClass);\n        }\n\n        this.view.getElement().classList.add(newTheme.cssClass);\n        this.controlTheme = newTheme;\n    }\n\n    public setReverseWindowControls(flag: boolean): void {\n        Utils.setToggleClass(this.view.getElement(), \"reverse-controls\", flag);\n    }\n\n    public static getLuminance(color: Color): number {\n        // Calculate the 'y' of the YIQ color model\n        let y = (color.red * 299 + color.green * 587 + color.blue * 114) / 1000;\n        return y / 255;\n    }\n\n    public static shadeColor(color: Color, frac: number): Color {\n        const t = frac < 0 ? 0 : 255;\n        const p = frac < 0 ? frac * -1 : frac;\n\n        // @ts-ignore\n        return new color.constructor(\n            Math.round((t - color.red) * p) + color.red,\n            Math.round((t - color.green) * p) + color.green,\n            Math.round((t - color.blue) * p) + color.blue,\n            color.alpha\n        );\n    }\n\n    public static clearCustomColors(): void {\n        themeCssSelectors.base.forEach((selector) => {\n            CssUtils.clearRule(selector);\n        });\n        themeCssSelectors.hi.forEach((selector) => {\n            CssUtils.clearRule(selector);\n        });\n        themeCssSelectors.txt.forEach((selector) => {\n            CssUtils.clearRule(selector);\n        });\n    }\n\n    public static applyCustomColors(): void {\n        const sheet = CssUtils.getStyleSheet();\n        if (!sheet) {\n            return;\n        }\n\n        const colorBase = atom.config.get(\"title-bar-replacer.colors.baseColor\") as Color;\n        const colorHi = atom.config.get(\"title-bar-replacer.colors.highlightColor\") as Color;\n        const colorText = atom.config.get(\"title-bar-replacer.colors.textColor\") as Color;\n\n        ThemeManager.clearCustomColors();\n\n        let factor = ThemeManager.getLuminance(colorBase) >= 0.5 ? -1 : 1;\n        sheet.insertRule(\n            themeCssSelectors.base[0] +\n                \"{ background-color: \" +\n                colorBase.toHexString() +\n                \" !important }\",\n            sheet.cssRules.length\n        );\n        sheet.insertRule(\n            themeCssSelectors.base[1] +\n                \"{ background-color: \" +\n                ThemeManager.shadeColor(colorBase, -0.4 * factor).toHexString() +\n                \" !important }\",\n            sheet.cssRules.length\n        );\n        sheet.insertRule(\n            themeCssSelectors.base[2] +\n                \"{ background-color: \" +\n                ThemeManager.shadeColor(colorBase, 0.1 * factor).toHexString() +\n                \" !important }\",\n            sheet.cssRules.length\n        );\n\n        sheet.insertRule(\n            themeCssSelectors.hi[0] +\n                \"{ background-color: \" +\n                colorHi.toHexString() +\n                \" !important }\",\n            sheet.cssRules.length\n        );\n\n        factor = ThemeManager.getLuminance(colorText) >= 0.5 ? -1 : 1;\n        sheet.insertRule(\n            themeCssSelectors.txt[0] + \"{ color: \" + colorText.toHexString() + \" !important }\",\n            sheet.cssRules.length\n        );\n        sheet.insertRule(\n            themeCssSelectors.txt[1] +\n                \"{ color: \" +\n                ThemeManager.shadeColor(colorText, 0.25 * factor).toHexString() +\n                \" !important }\",\n            sheet.cssRules.length\n        );\n        sheet.insertRule(\n            themeCssSelectors.txt[2] +\n                \"{ color: \" +\n                ThemeManager.shadeColor(colorText, -0.4 * factor).toHexString() +\n                \" !important }\",\n            sheet.cssRules.length\n        );\n    }\n}\n", "import EventEmitter from \"events\";\nimport { MenuItem } from \"./MenuItem\";\nimport { MenuLabel } from \"./MenuLabel\";\nimport { TitleBarReplacer } from \"./TitleBarReplacer\";\nimport { TitleBarReplacerView } from \"./TitleBarReplacerView\";\nimport { IMenuLabel, MenuLike, TbrEvent } from \"./types\";\nimport { Utils } from \"./Utils\";\n\nexport class ApplicationMenu {\n    private element: HTMLDivElement;\n    private labels: MenuLabel[];\n    private attentive: boolean = false;\n    private showingAltKeys = false;\n    private emitter: EventEmitter;\n    private parent?: TitleBarReplacerView;\n\n    private constructor(element: HTMLDivElement, parent?: TitleBarReplacerView) {\n        this.element = element;\n        this.labels = [];\n        this.emitter = new EventEmitter();\n        if (parent) {\n            this.parent = parent;\n        }\n\n        this.emitter.on(TbrEvent.MOUSE_CLICK, (...args) => this.onLabelClicked(args[0], args[1]));\n        this.emitter.on(TbrEvent.MOUSE_ENTER, (...args) =>\n            this.onLabelMouseEnter(args[0], args[1])\n        );\n\n        window.addEventListener(\"click\", (e) => this.blur());\n        atom.workspace.onDidChangeActivePaneItem((item) => this.blur());\n\n        document.body.addEventListener(\"keydown\", (e) => this.onKeyDown(e as KeyboardEvent));\n        document.body.addEventListener(\"keyup\", (e) => this.onKeyUp(e as KeyboardEvent));\n    }\n\n    public static createApplicationMenu(\n        menuTemplate: IMenuLabel[],\n        parent?: TitleBarReplacerView\n    ): ApplicationMenu {\n        const menuElement = document.createElement(\"div\");\n        menuElement.classList.add(\"app-menu\");\n\n        const self = new ApplicationMenu(menuElement, parent);\n\n        self.labels = [];\n        menuTemplate.forEach((o) => {\n            try {\n                self.addLabel(MenuLabel.createMenuLabel(o));\n            } catch (e) {\n                console.error(e);\n            }\n        });\n\n        return self;\n    }\n\n    public serialize() {\n        return this.labels.map((o) => {\n            return o.serialize();\n        });\n    }\n\n    private onLabelClicked(target: MenuLabel, e: MouseEvent): void {\n        if (target.isOpen()) {\n            target.setOpen(false);\n            return;\n        }\n        this.labels.forEach((o) => {\n            o.setOpen(false);\n        });\n        target.setOpen(true);\n    }\n\n    private onLabelMouseEnter(target: MenuLabel, e: MouseEvent): void {\n        if (this.isOpen() && !target.isOpen() && TitleBarReplacer.configState.openAdjacent) {\n            this.onLabelClicked(target, e);\n        }\n    }\n\n    private onKeyDown(e: KeyboardEvent): void {\n        if (\n            !e.repeat &&\n            (e.key === \"Alt\" || e.key === \"Escape\") &&\n            (this.showingAltKeys || this.isOpen() || this.isFocused())\n        ) {\n            this.close();\n            this.getFocusedLabel()?.setFocused(false);\n            this.attentive = false;\n            this.showAltKeys(false);\n            return;\n        }\n\n        if (e.key === \"Alt\") {\n            if (e.repeat) {\n                return;\n            }\n            this.attentive = !this.attentive;\n            if (TitleBarReplacer.configState.menuBarMnemonics) {\n                this.showAltKeys(!this.showingAltKeys);\n            }\n            return;\n        }\n\n        const openLabel = this.getOpenLabel();\n        const focusedLabel = this.getFocusedLabel();\n        if (openLabel) {\n            let selected = this.getSelectedLeaf();\n            switch (e.key) {\n                case \"ArrowUp\":\n                    if (!selected) {\n                        openLabel.getSubmenu().selectLastItem();\n                    } else {\n                        selected.getParent()?.getSubmenu()?.selectPreviousItem();\n                    }\n                    Utils.stopEvent(e);\n                    return;\n\n                case \"ArrowDown\":\n                    if (!selected) {\n                        openLabel.getSubmenu().selectFirstItem();\n                    } else {\n                        selected.getParent()?.getSubmenu()?.selectNextItem();\n                    }\n                    Utils.stopEvent(e);\n                    return;\n\n                case \"ArrowLeft\":\n                    if (!selected || selected.getParent() instanceof MenuLabel) {\n                        this.openPreviousLabel();\n                    } else {\n                        selected.getParent()?.setOpen(false);\n                    }\n                    Utils.stopEvent(e);\n                    return;\n\n                case \"ArrowRight\":\n                    if (!selected || !selected.hasSubmenu()) {\n                        this.openNextLabel();\n                    } else {\n                        selected.setOpen(true);\n                        selected.getSubmenu()?.selectFirstItem();\n                    }\n                    Utils.stopEvent(e);\n                    return;\n\n                case \"Enter\":\n                    if (selected && !selected.hasSubmenu()) {\n                        selected.execCommand();\n                        this.close();\n                        this.attentive = false;\n                        this.showAltKeys(false);\n                        Utils.stopEvent(e);\n                        return;\n                    }\n                    break;\n\n                case \" \": // Space\n                    if (selected && !selected.hasSubmenu()) {\n                        selected.bounce();\n                        selected.execCommand();\n                        Utils.stopEvent(e);\n                        return;\n                    }\n                    break;\n            }\n\n            if (this.showingAltKeys && !e.repeat) {\n                let target = this.getOpenLeaf();\n                if (target) {\n                    let handled = false;\n\n                    target\n                        .getSubmenu()\n                        ?.getSelectable()\n                        .some((o) => {\n                            if (\n                                o.getAltTrigger() !== undefined &&\n                                o.getAltTrigger() === e.key.toLowerCase()\n                            ) {\n                                o.execCommand();\n                                this.close();\n                                this.attentive = false;\n                                this.showAltKeys(false);\n                                Utils.stopEvent(e);\n                                handled = true;\n                                return true;\n                            }\n                            return false;\n                        });\n\n                    if (handled) {\n                        return;\n                    }\n                }\n            }\n        } else {\n            if (focusedLabel) {\n                switch (e.key) {\n                    case \"Enter\":\n                    case \"ArrowDown\":\n                        focusedLabel.setOpen(true);\n                        Utils.stopEvent(e);\n                        return;\n\n                    case \"ArrowLeft\":\n                        this.focusPreviousLabel();\n                        Utils.stopEvent(e);\n                        return;\n\n                    case \"ArrowRight\":\n                        this.focusNextLabel();\n                        Utils.stopEvent(e);\n                        return;\n                }\n            }\n            if (this.showingAltKeys && !e.repeat) {\n                let handled = false;\n\n                this.labels.some((o) => {\n                    if (\n                        o.getAltTrigger() !== undefined &&\n                        o.getAltTrigger() === e.key.toLowerCase()\n                    ) {\n                        if (focusedLabel) {\n                            focusedLabel.setFocused(false);\n                        }\n                        o.setOpen(true);\n                        Utils.stopEvent(e);\n                        handled = true;\n                        return true;\n                    }\n                    return false;\n                });\n\n                if (handled) {\n                    return;\n                }\n            }\n        }\n\n        this.attentive = false;\n        this.showAltKeys(false);\n    }\n\n    public onKeyUp(e: KeyboardEvent): void {\n        if (e.key === \"Alt\" && !this.isFocused() && !this.isOpen()) {\n            if (this.showingAltKeys) {\n                if (\n                    !TitleBarReplacer.configState.altGivesFocus &&\n                    !TitleBarReplacer.configState.autoHide\n                ) {\n                    this.showAltKeys(false);\n                }\n            }\n\n            if (this.attentive) {\n                if (TitleBarReplacer.configState.autoHide) {\n                    this.parent?.setMenuBarVisible(true);\n                }\n\n                if (\n                    TitleBarReplacer.configState.autoHide ||\n                    TitleBarReplacer.configState.altGivesFocus\n                ) {\n                    this.focusFirstLabel();\n                }\n            }\n\n            this.attentive = false;\n        }\n    }\n\n    public blur(): void {\n        this.close();\n        this.getFocusedLabel()?.setFocused(false);\n        this.attentive = false;\n        this.showAltKeys(false);\n    }\n\n    public close(): void {\n        this.labels.forEach((o) => {\n            if (o.isOpen()) {\n                o.setOpen(false);\n            }\n        });\n\n        if (TitleBarReplacer.configState.autoHide) {\n            this.parent?.setMenuBarVisible(false);\n        }\n\n        if (!TitleBarReplacer.configState.menuBarMnemonics) {\n            this.attentive = true;\n        }\n    }\n\n    public showAltKeys(flag: boolean): void {\n        Utils.setToggleClass(this.element, \"alt-down\", flag);\n        this.showingAltKeys = flag;\n    }\n\n    public openFirstLabel(): void {\n        this.labels[0]?.setOpen(true);\n    }\n\n    public openLastLabel(): void {\n        this.labels[this.labels.length - 1]?.setOpen(true);\n    }\n\n    public openNextLabel(): void {\n        let label = this.getOpenLabel();\n        if (label) {\n            label.setOpen(false);\n            this.labels[Utils.mod(this.labels.indexOf(label) + 1, this.labels.length)].setOpen(\n                true\n            );\n        }\n    }\n\n    public openPreviousLabel(): void {\n        let label = this.getOpenLabel();\n        if (label) {\n            label.setOpen(false);\n            this.labels[Utils.mod(this.labels.indexOf(label) - 1, this.labels.length)].setOpen(\n                true\n            );\n        }\n    }\n\n    public focusFirstLabel(): void {\n        this.labels.forEach((o) => {\n            o.setFocused(false);\n        });\n        this.labels[0]?.setFocused(true);\n    }\n\n    public focusLastLabel(): void {\n        this.labels.forEach((o) => {\n            o.setFocused(false);\n        });\n        this.labels[this.labels.length - 1]?.setFocused(true);\n    }\n\n    public focusNextLabel(): void {\n        let label = this.getFocusedLabel();\n        if (label) {\n            label.setFocused(false);\n            this.labels[Utils.mod(this.labels.indexOf(label) + 1, this.labels.length)].setFocused(\n                true\n            );\n        }\n    }\n\n    public focusPreviousLabel(): void {\n        let label = this.getFocusedLabel();\n        if (label) {\n            label.setFocused(false);\n            this.labels[Utils.mod(this.labels.indexOf(label) - 1, this.labels.length)].setFocused(\n                true\n            );\n        }\n    }\n\n    public getOpenLeaf(): MenuLike | null {\n        let result: MenuLike | null = null;\n\n        const recurseItem = (item: MenuLike): MenuLike | null => {\n            let curr: MenuLike | null = null;\n            item.getSubmenu()?.some((o) => {\n                if (o.hasSubmenu() && o.isOpen()) {\n                    curr = o;\n                    let tmp = recurseItem(o);\n                    if (tmp !== null) {\n                        curr = tmp;\n                    }\n                    return true;\n                }\n                return false;\n            });\n            return curr;\n        };\n\n        this.labels.some((o) => {\n            if (o.isOpen()) {\n                result = o;\n                let tmp = recurseItem(o);\n                if (tmp !== null) {\n                    result = tmp;\n                }\n                return true;\n            }\n            return false;\n        });\n\n        return result;\n    }\n\n    public getSelectedLeaf(): MenuItem | null {\n        let result: MenuItem | null = null;\n\n        const recurseItem = (item: MenuLike): MenuLike | null => {\n            let curr: MenuLike | null = null;\n            item.getSubmenu()?.some((o) => {\n                if (o.isSelected()) {\n                    curr = o;\n                    if (o.hasSubmenu() && o.isOpen()) {\n                        let tmp = recurseItem(o);\n                        if (tmp !== null) {\n                            curr = tmp;\n                        }\n                        return true;\n                    }\n                }\n                return false;\n            });\n            return curr;\n        };\n\n        this.labels.some((o) => {\n            if (o.isOpen()) {\n                let tmp = recurseItem(o);\n                if (tmp !== null) {\n                    result = tmp as MenuItem;\n                }\n                return true;\n            }\n            return false;\n        });\n\n        return result;\n    }\n\n    public getOpenLabel(): MenuLabel | null {\n        let result: MenuLabel | null = null;\n\n        this.labels.some((o) => {\n            if (o.isOpen()) {\n                result = o;\n                return true;\n            }\n            return false;\n        });\n\n        return result;\n    }\n\n    public getFocusedLabel(): MenuLabel | null {\n        let result: MenuLabel | null = null;\n\n        this.labels.some((o) => {\n            if (o.isFocused()) {\n                result = o;\n                return true;\n            }\n            return false;\n        });\n\n        return result;\n    }\n\n    public getElement() {\n        return this.element;\n    }\n\n    public getLabels() {\n        return this.labels;\n    }\n\n    public isOpen() {\n        return this.getOpenLabel() !== null;\n    }\n\n    public isFocused() {\n        return this.getFocusedLabel() !== null;\n    }\n\n    public getEmitter() {\n        return this.emitter;\n    }\n\n    public addLabel(labelItem: MenuLabel) {\n        labelItem.setParent(this);\n        this.labels.push(labelItem);\n        this.element.appendChild(labelItem.getElement());\n    }\n\n    insertLabel(item: MenuLabel, index: number): void {\n        item.setParent(this);\n        this.labels.splice(index, 0, item);\n        this.element.insertBefore(\n            item.getElement(),\n            item.getElement().parentElement?.children[index] || null\n        );\n    }\n\n    removeLabel(item: MenuLabel): void;\n    removeLabel(index: number): void;\n    removeLabel(x: MenuLabel | number) {\n        if (x instanceof MenuLabel) {\n            this.labels.splice(this.labels.indexOf(x), 1);\n            x.getElement().parentElement?.removeChild(x.getElement());\n            return;\n        }\n\n        const item = this.labels.splice(x, 1)[0];\n        item?.getElement().parentElement?.removeChild(item?.getElement());\n    }\n}\n", "import EventEmitter from \"events\";\nimport { ApplicationMenu } from \"./ApplicationMenu\";\nimport { MalformedTemplateError } from \"./MalformedTemplateError\";\nimport { MenuItem } from \"./MenuItem\";\nimport { IMenuLabel, MenuLike, TbrEvent } from \"./types\";\nimport { Utils } from \"./Utils\";\nimport { Submenu } from \"./Submenu\";\n\nexport class MenuLabel implements MenuLike {\n    private element: HTMLSpanElement;\n    private labelText!: string;\n    private submenu: Submenu;\n    private open: boolean = false;\n    private focused: boolean = false;\n    private altTrigger?: string;\n    private emitter: EventEmitter;\n    private parent?: ApplicationMenu;\n\n    private constructor(element: HTMLSpanElement) {\n        this.element = element;\n        this.submenu = new Submenu();\n        this.emitter = new EventEmitter();\n\n        this.emitter.on(TbrEvent.MOUSE_CLICK, (...args) => this.onSubItemClick(args[0], args[1]));\n        this.emitter.on(TbrEvent.MOUSE_ENTER, (...args) =>\n            this.onSubItemMouseEnter(args[0], args[1])\n        );\n\n        this.element.addEventListener(\"click\", (e) => this.onMouseClick(e));\n        this.element.addEventListener(\"mouseenter\", (e) => this.onMouseEnter(e));\n    }\n\n    /**\n     * @throws {MalformedTemplateError}\n     */\n    public static createMenuLabel(labelItem: IMenuLabel): MenuLabel {\n        if (labelItem.label === undefined || !labelItem.submenu) {\n            throw new MalformedTemplateError(\"Label template is malformed!\");\n        }\n\n        const elmnt = document.createElement(\"span\");\n        elmnt.classList.add(\"menu-label\");\n        const labelData = Utils.formatAltKey(labelItem.label);\n        elmnt.setAttribute(\"label\", labelData.name);\n        elmnt.setAttribute(\"alt-trigger\", labelData.key as string);\n        elmnt.innerHTML = labelData.html;\n\n        const self = new MenuLabel(elmnt);\n        self.labelText = labelItem.label;\n        self.altTrigger = labelData.key || undefined;\n\n        const submenuElmnt = document.createElement(\"div\");\n        submenuElmnt.classList.add(\"menu-box\");\n        elmnt.appendChild(submenuElmnt);\n\n        labelItem.submenu.forEach((o) => {\n            try {\n                self.addChild(MenuItem.createMenuItem(o));\n            } catch (e) {\n                console.error(e);\n            }\n        });\n\n        return self;\n    }\n\n    public serialize() {\n        return {\n            label: this.labelText,\n            submenu: this.submenu.map((o) => {\n                return o.serialize();\n            }),\n        };\n    }\n\n    private onMouseClick(e: MouseEvent) {\n        e.stopPropagation();\n        this.parent?.getEmitter().emit(TbrEvent.MOUSE_CLICK, this, e);\n    }\n\n    private onMouseEnter(e: MouseEvent) {\n        e.stopPropagation();\n        this.parent?.getEmitter().emit(TbrEvent.MOUSE_ENTER, this, e);\n    }\n\n    private onSubItemClick(target: MenuItem, e: MouseEvent): void {}\n\n    private onSubItemMouseEnter(target: MenuItem, e: MouseEvent): void {\n        this.submenu.forEach((o) => {\n            o.setOpen(false);\n            o.setSelected(false);\n        });\n        if (target.isEnabled()) {\n            target.setSelected(true);\n            if (target.hasSubmenu()) {\n                target.setOpen(true);\n            }\n        }\n    }\n\n    public getElement() {\n        return this.element;\n    }\n\n    public getLabelText() {\n        return this.labelText;\n    }\n\n    public getSubmenu() {\n        return this.submenu;\n    }\n\n    public isOpen() {\n        return this.open;\n    }\n\n    public isFocused() {\n        return this.focused;\n    }\n\n    public getAltTrigger() {\n        return this.altTrigger;\n    }\n\n    public getEmitter() {\n        return this.emitter;\n    }\n\n    public getParent() {\n        return this.parent;\n    }\n\n    public setOpen(flag: boolean) {\n        this.open = flag;\n        if (flag) {\n            this.setFocused(false);\n        }\n        this.submenu.forEach((o) => {\n            o.setOpen(false);\n            if (!flag) o.setSelected(false);\n        });\n        Utils.setToggleClass(this.element, \"open\", flag);\n    }\n\n    public setFocused(flag: boolean) {\n        this.focused = flag;\n        Utils.setToggleClass(this.element, \"focused\", flag);\n    }\n\n    public setParent(parent: ApplicationMenu) {\n        this.parent = parent;\n    }\n\n    public addChild(item: MenuItem) {\n        item.setParent(this);\n        this.submenu.push(item);\n        this.element.querySelector(\".menu-box\")?.appendChild(item.getElement());\n    }\n\n    insertChild(item: MenuItem, index: number): void {\n        item.setParent(this);\n        this.submenu?.splice(index, 0, item);\n        const menuElmnt = this.element.querySelector(\".menu-box\");\n        menuElmnt?.insertBefore(item.getElement(), menuElmnt.children[index] || null);\n    }\n\n    removeChild(item: MenuItem): void;\n    removeChild(index: number): void;\n    removeChild(x: MenuItem | number) {\n        if (x instanceof MenuItem) {\n            this.submenu?.splice(this.submenu?.indexOf(x), 1);\n            x.getElement().parentElement?.removeChild(x.getElement());\n            return;\n        }\n\n        const item = this.submenu?.splice(x, 1)[0];\n        item?.getElement().parentElement?.removeChild(item?.getElement());\n    }\n}\n", "export class MalformedTemplateError extends Error {\n    name = \"MalformedTemplateError\";\n}\n", "import EventEmitter from \"events\";\nimport { ApplicationMenu } from \"./ApplicationMenu\";\nimport { MalformedTemplateError } from \"./MalformedTemplateError\";\nimport { MenuLabel } from \"./MenuLabel\";\nimport { exceptionCommands, IMenuItem, MenuLike, TbrEvent } from \"./types\";\nimport { Utils } from \"./Utils\";\nimport { Submenu } from \"./Submenu\";\n// @ts-ignore\nimport { shell } from \"electron\";\n\nexport class MenuItem implements MenuLike {\n    private element: HTMLDivElement | HTMLHRElement;\n    private labelText?: string;\n    private separator: boolean = false;\n    private enabled: boolean = true;\n    private visible: boolean = true;\n    private selected: boolean = false;\n    private open: boolean = false;\n    private command?: string;\n    private commandDetail?: any;\n    private altTrigger?: string;\n    private submenu?: Submenu;\n    private emitter: EventEmitter;\n    private parent?: MenuLabel | MenuItem;\n\n    private constructor(element: HTMLDivElement | HTMLHRElement) {\n        this.element = element;\n        this.emitter = new EventEmitter();\n\n        this.emitter.on(TbrEvent.MOUSE_ENTER, (...args) =>\n            this.onSubItemMouseEnter(args[0], args[1])\n        );\n\n        this.element.addEventListener(\"click\", (e) => this.onMouseClick(e as MouseEvent));\n        this.element.addEventListener(\"mouseenter\", (e) => this.onMouseEnter(e as MouseEvent));\n    }\n\n    /**\n     * @throws {MalformedTemplateError}\n     */\n    public static createMenuItem(menuItem: IMenuItem): MenuItem {\n        if (menuItem.type == \"separator\") {\n            const self = new MenuItem(document.createElement(\"hr\"));\n            self.separator = true;\n            return self;\n        }\n        if (menuItem.label === undefined) {\n            throw new MalformedTemplateError(\"Menu item template is malformed!\");\n        }\n\n        const elmnt = document.createElement(\"div\");\n        elmnt.classList.add(\"menu-item\");\n        const self = new MenuItem(elmnt);\n\n        if (menuItem.enabled === false) {\n            self.enabled = false;\n            elmnt.classList.add(\"disabled\");\n        }\n\n        if (menuItem.visible === false) {\n            self.visible = false;\n            elmnt.classList.add(\"invisible\");\n        }\n\n        const altKeyData = Utils.formatAltKey(menuItem.label);\n        elmnt.setAttribute(\"alt-trigger\", altKeyData.key as string);\n        self.altTrigger = altKeyData.key || undefined;\n\n        // Exception for the VERSION item\n        if (menuItem.label === \"VERSION\") {\n            altKeyData.html = \"Version \" + atom.getVersion();\n        }\n\n        const menuItemName = document.createElement(\"span\");\n        menuItemName.classList.add(\"menu-item-name\");\n        menuItemName.innerHTML = altKeyData.html;\n        self.labelText = menuItem.label;\n\n        const menuItemKeystroke = document.createElement(\"span\");\n        menuItemKeystroke.classList.add(\"menu-item-keystroke\");\n\n        elmnt.appendChild(menuItemName);\n        elmnt.appendChild(menuItemKeystroke);\n\n        if (menuItem.command !== undefined) {\n            self.command = menuItem.command;\n            self.commandDetail = menuItem.commandDetail;\n\n            const keyStrokes = atom.keymaps.findKeyBindings({ command: menuItem.command });\n            if (keyStrokes.length > 0) {\n                menuItemKeystroke.innerHTML = keyStrokes[keyStrokes.length - 1].keystrokes;\n            }\n        }\n\n        if (menuItem.submenu?.length > 0) {\n            menuItem.submenu.forEach((o) => {\n                try {\n                    self.addChild(MenuItem.createMenuItem(o));\n                } catch (e) {\n                    console.error(e);\n                }\n            });\n        }\n\n        return self;\n    }\n\n    public serialize() {\n        return {\n            label: this.labelText,\n            command: this.command,\n            commandDetail: this.commandDetail,\n            submenu: this.submenu?.map((o) => {\n                return o.serialize();\n            }),\n        };\n    }\n\n    private onMouseClick(e: MouseEvent) {\n        e.stopPropagation();\n        this.parent?.getEmitter().emit(TbrEvent.MOUSE_CLICK, this, e);\n        if (this.isExecutable()) {\n            this.execCommand();\n            this.getAppMenuRoot()?.close();\n        }\n    }\n\n    private onMouseEnter(e: MouseEvent) {\n        e.stopPropagation();\n        this.parent?.getEmitter().emit(TbrEvent.MOUSE_ENTER, this, e);\n    }\n\n    private onSubItemMouseEnter(target: MenuItem, e: MouseEvent): void {\n        this.submenu?.forEach((o) => {\n            o.setOpen(false);\n            o.setSelected(false);\n        });\n        target.setSelected(true);\n        target.setOpen(true);\n    }\n\n    public async execCommand(): Promise<void> {\n        if (this.command === undefined) {\n            return;\n        }\n\n        if (exceptionCommands.indexOf(this.command) > -1) {\n            switch (this.command) {\n                case \"application:open-terms-of-use\":\n                    shell.openExternal(\"https://help.github.com/articles/github-terms-of-service/\");\n                    break;\n                case \"application:open-documentation\":\n                    shell.openExternal(\"http://flight-manual.atom.io/\");\n                    break;\n                case \"application:open-faq\":\n                    shell.openExternal(\"https://atom.io/faq\");\n                    break;\n                case \"application:open-discussions\":\n                    shell.openExternal(\"https://discuss.atom.io/\");\n                    break;\n                case \"application:report-issue\":\n                    shell.openExternal(\n                        \"https://github.com/atom/atom/blob/master/CONTRIBUTING.md#submitting-issues\"\n                    );\n                    break;\n                case \"application:search-issues\":\n                    shell.openExternal(\"https://github.com/atom/atom/issues\");\n                    break;\n            }\n            return;\n        }\n\n        let target =\n            (atom.workspace.getActiveTextEditor() as any)?.getElement() ||\n            (atom.workspace.getActivePane() as any).getElement();\n\n        await (atom.commands as any).dispatch(target, this.command, this.commandDetail);\n    }\n\n    public addChild(item: MenuItem) {\n        if (!this.hasSubmenu()) {\n            this.submenu = new Submenu();\n            this.element.classList.add(\"has-sub\");\n\n            const menuBox = document.createElement(\"div\");\n            menuBox.classList.add(\"menu-box\", \"menu-item-submenu\");\n            this.element.appendChild(menuBox);\n        }\n\n        item.setParent(this);\n        this.submenu?.push(item);\n        this.element.querySelector(\".menu-box\")?.appendChild(item.getElement());\n    }\n\n    insertChild(item: MenuItem, index: number): void {\n        if (!this.hasSubmenu()) {\n            this.submenu = new Submenu();\n            this.element.classList.add(\"has-sub\");\n\n            const menuBox = document.createElement(\"div\");\n            menuBox.classList.add(\"menu-box\", \"menu-item-submenu\");\n            this.element.appendChild(menuBox);\n        }\n\n        item.setParent(this);\n        this.submenu?.splice(index, 0, item);\n        const menuElmnt = this.element.querySelector(\".menu-box\");\n        menuElmnt?.insertBefore(item.getElement(), menuElmnt.children[index] || null);\n    }\n\n    removeChild(item: MenuItem): void;\n    removeChild(index: number): void;\n    removeChild(x: MenuItem | number) {\n        if (x instanceof MenuItem) {\n            this.submenu?.splice(this.submenu?.indexOf(x), 1);\n            x.getElement().parentElement?.removeChild(x.getElement());\n            return;\n        }\n\n        const item = this.submenu?.splice(x, 1)[0];\n        item?.getElement().parentElement?.removeChild(item?.getElement());\n    }\n\n    public getAppMenuRoot(): ApplicationMenu | null {\n        let result: MenuItem | MenuLabel | ApplicationMenu | undefined = this.parent;\n        while (result && !(result instanceof ApplicationMenu)) {\n            result = result.getParent();\n        }\n\n        if (result instanceof ApplicationMenu) {\n            return result;\n        }\n\n        return null;\n    }\n\n    public bounce(): void {\n        const duration = parseFloat(window.getComputedStyle(this.element).animationDuration) * 1000;\n        this.element.classList.add(\"bounce\");\n\n        setTimeout(() => {\n            this.element.classList.remove(\"bounce\");\n        }, duration);\n    }\n\n    public getElement() {\n        return this.element;\n    }\n\n    public getLabelText() {\n        return this.labelText;\n    }\n\n    public isSeparator() {\n        return this.separator;\n    }\n\n    public isEnabled() {\n        return this.enabled;\n    }\n\n    public isVisible() {\n        return this.visible;\n    }\n\n    public isSelected() {\n        return this.selected;\n    }\n\n    public isOpen() {\n        return this.open;\n    }\n\n    public getCommand() {\n        return this.command;\n    }\n\n    public getCommandDetail() {\n        return this.commandDetail;\n    }\n\n    public getAltTrigger() {\n        return this.altTrigger;\n    }\n\n    public getSubmenu() {\n        return this.submenu;\n    }\n\n    public hasSubmenu() {\n        return this.submenu !== undefined;\n    }\n\n    public getEmitter() {\n        return this.emitter;\n    }\n\n    public getParent() {\n        return this.parent;\n    }\n\n    public isExecutable() {\n        return this.enabled && !this.separator && !this.hasSubmenu();\n    }\n\n    public setSelected(flag: boolean) {\n        this.selected = flag;\n        flag\n            ? this.element.classList.add(\"selected\")\n            : this.element.classList.remove(\"selected\", \"open\");\n    }\n\n    public setOpen(flag: boolean) {\n        this.open = flag;\n        if (!flag) {\n            this.submenu?.forEach((o) => {\n                o.setOpen(false);\n                o.setSelected(false);\n            });\n        }\n        Utils.setToggleClass(this.element, \"open\", flag);\n    }\n\n    public setParent(parent: MenuLabel | MenuItem) {\n        this.parent = parent;\n    }\n}\n", "import { MenuItem } from \"./MenuItem\";\nimport { Utils } from \"./Utils\";\n\nexport class Submenu extends Array<MenuItem> {\n    public getSelected(): MenuItem | null {\n        let result: MenuItem | null = null;\n\n        this.some((o) => {\n            if (o.isSelected()) {\n                result = o;\n                return true;\n            }\n            return false;\n        });\n\n        return result;\n    }\n\n    public getSelectable(): MenuItem[] {\n        return this.filter((o) => {\n            return o.isEnabled() && o.isVisible() && !o.isSeparator();\n        });\n    }\n\n    public selectFirstItem() {\n        const selectable = this.getSelectable();\n        if (selectable.length < 1) {\n            return;\n        }\n        this.getSelected()?.setSelected(false);\n        selectable[0].setSelected(true);\n    }\n\n    public selectLastItem() {\n        const selectable = this.getSelectable();\n        if (selectable.length < 1) {\n            return;\n        }\n        this.getSelected()?.setSelected(false);\n        selectable[selectable.length - 1].setSelected(true);\n    }\n\n    public selectNextItem() {\n        const selectable = this.getSelectable();\n        if (selectable.length <= 1) {\n            return;\n        }\n\n        const selected = this.getSelected();\n        if (selected) {\n            let i = selectable.indexOf(selected);\n            selected.setSelected(false);\n            selectable[Utils.mod(i + 1, selectable.length)].setSelected(true);\n        }\n    }\n\n    public selectPreviousItem() {\n        const selectable = this.getSelectable();\n        if (selectable.length <= 1) {\n            return;\n        }\n\n        const selected = this.getSelected();\n        if (selected) {\n            let i = selectable.indexOf(selected);\n            selected.setSelected(false);\n            selectable[Utils.mod(i - 1, selectable.length)].setSelected(true);\n        }\n    }\n\n    public countSelectable(): number {\n        let c = 0;\n        this.forEach((o) => {\n            if (o.isEnabled() && o.isVisible() && !o.isSeparator()) {\n                c++;\n            }\n        });\n\n        return c;\n    }\n}\n", "import { ApplicationMenu } from \"./ApplicationMenu\";\n// @ts-ignore\nimport { remote } from \"electron\";\nimport { TbrConfig, TbrWindowControls } from \"./types\";\nimport { Utils } from \"./Utils\";\nimport { ThemeManager } from \"./ThemeManager\";\nimport { MenuUpdater } from \"./MenuUpdater\";\n\nexport class TitleBarReplacerView {\n    private configState: TbrConfig;\n    private themeManager: ThemeManager;\n    private element: HTMLDivElement;\n    private titleElmnt: HTMLSpanElement;\n    private windowControls: TbrWindowControls;\n    private appMenu: ApplicationMenu;\n    private titleBarVisible: boolean = true;\n    private menuBarVisible: boolean = true;\n    private originalMenuUpdateFn?: VoidFunction;\n\n    public constructor(configState: TbrConfig) {\n        this.configState = configState;\n        this.themeManager = new ThemeManager(this);\n        [this.element, this.titleElmnt, this.windowControls] = this.createElement();\n        this.initWindowControls();\n\n        const titleObserver = new MutationObserver((mutations, self) => {\n            mutations.forEach((o) => {\n                if (o.type === \"childList\") {\n                    this.setTitleText(o.target.textContent || \"Atom\");\n                }\n            });\n        });\n\n        const realTitle = document.querySelector(\"title\");\n        if (realTitle !== null) {\n            titleObserver.observe(realTitle, { childList: true });\n        }\n\n        const menuTemplate = (atom.menu as any).template;\n        this.appMenu = ApplicationMenu.createApplicationMenu(menuTemplate, this);\n        this.element.appendChild(this.appMenu.getElement());\n        this.updateTitleText();\n        this.attachMenuUpdater();\n\n        atom.themes.onDidChangeActiveThemes(() => {\n            this.updateTransforms();\n        });\n    }\n\n    private createElement(): [HTMLDivElement, HTMLSpanElement, TbrWindowControls] {\n        const element = document.createElement(\"div\");\n        element.classList.add(\"title-bar-replacer\");\n\n        const menuDiv = document.createElement(\"div\");\n        menuDiv.classList.add(\"tbr-title-bar\");\n\n        const titleSpan = document.createElement(\"span\");\n        titleSpan.classList.add(\"custom-title\");\n        titleSpan.innerHTML = \"Atom\";\n        menuDiv.appendChild(titleSpan);\n\n        const controlWrap = document.createElement(\"div\");\n        controlWrap.classList.add(\"control-wrap\");\n        menuDiv.appendChild(controlWrap);\n\n        const controlMinimize = document.createElement(\"i\");\n        controlMinimize.textContent = \"control_minimize\";\n        controlMinimize.classList.add(\"tbr-minimize\");\n        controlWrap.appendChild(controlMinimize);\n\n        const controlMaximize = document.createElement(\"i\");\n        controlMaximize.textContent = \"control_maximize\";\n        controlMaximize.classList.add(\"tbr-maximize\");\n        controlWrap.appendChild(controlMaximize);\n\n        const controlClose = document.createElement(\"i\");\n        controlClose.textContent = \"control_close\";\n        controlClose.classList.add(\"tbr-close\");\n        controlWrap.appendChild(controlClose);\n\n        element.appendChild(menuDiv);\n\n        return [\n            element,\n            titleSpan,\n            {\n                minimize: controlMinimize,\n                maximize: controlMaximize,\n                close: controlClose,\n            },\n        ];\n    }\n\n    public async updateTransforms(): Promise<void> {\n        this.element.querySelectorAll(\".menu-box.menu-item-submenu\").forEach((o) => {\n            const parentRect = o.parentElement?.getBoundingClientRect() as DOMRect;\n            (o as HTMLElement).style.transform = `translate(${parentRect.width - 25}px, -3px)`;\n        });\n    }\n\n    public attachMenuUpdater(): void {\n        if (this.originalMenuUpdateFn === undefined) {\n            this.originalMenuUpdateFn = atom.menu.update;\n        }\n\n        atom.menu.update = (...args) => {\n            this.originalMenuUpdateFn?.apply(atom.menu, ...args);\n            this.updateMenu();\n        };\n\n        this.updateMenu();\n    }\n\n    public detachMenuUpdater(): void {\n        if (this.originalMenuUpdateFn !== undefined) {\n            atom.menu.update = this.originalMenuUpdateFn;\n        }\n    }\n\n    public updateMenu(): void {\n        const edits = MenuUpdater.run(this.appMenu);\n        if (edits > 0) {\n            this.updateTransforms();\n            this.checkTitleCollision();\n        }\n    }\n\n    public rebuildApplicationMenu(): void {\n        this.appMenu.getElement().parentElement?.removeChild(this.appMenu.getElement());\n        // @ts-ignore\n        let menuTemplate = atom.menu.template;\n        this.appMenu = ApplicationMenu.createApplicationMenu(menuTemplate);\n        this.element.appendChild(this.appMenu.getElement());\n        this.updateTransforms();\n    }\n\n    public initWindowControls(): void {\n        const mainWindow = remote.getCurrentWindow();\n\n        mainWindow.on(\"maximize\", () => {\n            this.windowControls.maximize.innerHTML = \"control_restore\";\n        });\n\n        mainWindow.on(\"unmaximize\", () => {\n            this.windowControls.maximize.innerHTML = \"control_maximize\";\n        });\n\n        mainWindow.on(\"enter-full-screen\", () => {\n            this.windowControls.maximize.classList.add(\"disabled\");\n            if (this.configState.hideFullscreenTitle) {\n                this.setTitleBarVisible(false);\n            }\n        });\n\n        mainWindow.on(\"leave-full-screen\", () => {\n            this.windowControls.maximize.classList.remove(\"disabled\");\n            if (this.configState.displayTitleBar) {\n                this.setTitleBarVisible(true);\n            }\n        });\n\n        mainWindow.on(\"blur\", () => {\n            document.body.click();\n        });\n\n        mainWindow.on(\"resize\", () => {\n            this.checkTitleCollision();\n        });\n\n        this.windowControls.minimize.addEventListener(\"click\", () => {\n            mainWindow.minimize();\n        });\n\n        this.windowControls.maximize.addEventListener(\"click\", () => {\n            if (!mainWindow.isMaximized()) {\n                mainWindow.maximize();\n                this.windowControls.maximize.innerHTML = \"control_restore\";\n            } else {\n                mainWindow.unmaximize();\n                this.windowControls.maximize.innerHTML = \"control_maximize\";\n            }\n        });\n\n        this.windowControls.close.addEventListener(\"click\", () => {\n            mainWindow.close();\n        });\n\n        if (mainWindow.isMaximized()) {\n            this.windowControls.maximize.innerHTML = \"control_restore\";\n        } else {\n            this.windowControls.maximize.innerHTML = \"control_maximize\";\n        }\n    }\n\n    public setTitleBarVisible(flag: boolean): void {\n        this.titleBarVisible = flag;\n        Utils.setToggleClass(\n            this.element.querySelector(\".tbr-title-bar\") as HTMLElement,\n            \"no-title-bar\",\n            !flag\n        );\n        this.checkTitleCollision();\n    }\n\n    public setMenuBarVisible(flag: boolean): void {\n        this.menuBarVisible = flag;\n        Utils.setToggleClass(this.appMenu.getElement(), \"no-menu-bar\", !flag);\n    }\n\n    public setTitleText(title: string): void {\n        this.titleElmnt.innerHTML = title;\n        this.checkTitleCollision();\n    }\n\n    public updateTitleText(): void {\n        const realTitle = document.querySelector(\"title\");\n        if (realTitle !== null) {\n            this.titleElmnt.innerHTML = realTitle.textContent || \"Atom\";\n            this.checkTitleCollision();\n        }\n    }\n\n    public checkTitleCollision(): void {\n        if (this.configState.titleBarStyle === \"Compact\") {\n            const menuRect = this.appMenu.getElement().getBoundingClientRect();\n            const titleRect = this.titleElmnt.getBoundingClientRect();\n\n            if (Utils.domRectIntersects(menuRect, titleRect)) {\n                this.titleElmnt.style.visibility = \"hidden\";\n            } else {\n                this.titleElmnt.style.visibility = \"visible\";\n            }\n        } else {\n            this.titleElmnt.style.visibility = \"visible\";\n        }\n    }\n\n    public deactivate(): void {\n        this.element.parentElement?.removeChild(this.element);\n        this.detachMenuUpdater();\n    }\n\n    public getConfigState() {\n        return this.configState;\n    }\n\n    public getThemeManager() {\n        return this.themeManager;\n    }\n\n    public getElement() {\n        return this.element;\n    }\n\n    public getApplicationMenu() {\n        return this.appMenu;\n    }\n\n    public isTitleBarVisible() {\n        return this.titleBarVisible;\n    }\n\n    public isMenuBarVisible() {\n        return this.menuBarVisible;\n    }\n}\n", "/**\n * An implementation of Myers' diff algorithm\n * Derived from: https://github.com/Swatinem/diff\n */\nimport { EqualFunction } from \"./types\";\n\nexport enum EditToken {\n    NOOP,\n    DELETE,\n    INSERT,\n    REPLACE,\n}\n\ninterface Snake {\n    x: number;\n    y: number;\n    u: number;\n    v: number;\n}\n\nexport class Diff<T, U> {\n    private a: T[];\n    private b: U[];\n    private moda: boolean[];\n    private modb: boolean[];\n    private up: { [key: number]: number } = {};\n    private down: { [key: number]: number } = {};\n    private eqlFn: EqualFunction<T, U>;\n\n    public constructor(a: T[], b: U[], eqlFn: EqualFunction<T, U> = (a: any, b: any) => a === b) {\n        this.a = a;\n        this.b = b;\n        this.eqlFn = eqlFn;\n        this.moda = new Array(a.length).fill(false);\n        this.modb = new Array(b.length).fill(false);\n\n        this.lcs(0, this.a.length, 0, this.b.length);\n    }\n\n    public createEditScript(): EditToken[] {\n        let astart = 0;\n        let bstart = 0;\n        const aend = this.moda.length;\n        const bend = this.modb.length;\n        const result: EditToken[] = [];\n\n        while (astart < aend || bstart < bend) {\n            if (astart < aend && bstart < bend) {\n                if (!this.moda[astart] && !this.modb[bstart]) {\n                    result.push(EditToken.NOOP);\n                    astart++;\n                    bstart++;\n                    continue;\n                } else if (this.moda[astart] && this.modb[bstart]) {\n                    result.push(EditToken.REPLACE);\n                    astart++;\n                    bstart++;\n                    continue;\n                }\n            }\n\n            if (astart < aend && (bstart >= bend || this.moda[astart])) {\n                result.push(EditToken.DELETE);\n                astart++;\n            }\n\n            if (bstart < bend && (astart >= aend || this.modb[bstart])) {\n                result.push(EditToken.INSERT);\n                bstart++;\n            }\n        }\n\n        return result;\n    }\n\n    private lcs(astart: number, aend: number, bstart: number, bend: number) {\n        // separate common head\n        while (astart < aend && bstart < bend && this.eqlFn(this.a[astart], this.b[bstart])) {\n            astart++;\n            bstart++;\n        }\n\n        // separate common tail\n        while (astart < aend && bstart < bend && this.eqlFn(this.a[aend - 1], this.b[bend - 1])) {\n            aend--;\n            bend--;\n        }\n\n        if (astart === aend) {\n            // only insertions\n            while (bstart < bend) {\n                this.modb[bstart] = true;\n                bstart++;\n            }\n        } else if (bend === bstart) {\n            // only deletions\n            while (astart < aend) {\n                this.moda[astart] = true;\n                astart++;\n            }\n        } else {\n            const snake = this.snake(astart, aend, bstart, bend);\n            this.lcs(astart, snake.x, bstart, snake.y);\n            this.lcs(snake.u, aend, snake.v, bend);\n        }\n    }\n\n    private snake(astart: number, aend: number, bstart: number, bend: number): Snake {\n        const N = aend - astart;\n        const M = bend - bstart;\n\n        const kdown = astart - bstart;\n        const kup = aend - bend;\n\n        const delta = N - M;\n        const deltaOdd = (delta & 1) !== 0;\n\n        this.down[kdown + 1] = astart;\n        this.up[kup - 1] = aend;\n\n        const Dmax = (N + M) / 2 + 1;\n\n        for (let D = 0; D <= Dmax; D++) {\n            let k: number, x: number, y: number;\n\n            // forward path\n            for (k = kdown - D; k <= kdown + D; k += 2) {\n                if (k === kdown - D) {\n                    x = this.down[k + 1]; // this.down\n                } else {\n                    x = this.down[k - 1] + 1; // right\n                    if (k < kdown + D && this.down[k + 1] >= x) {\n                        x = this.down[k + 1]; // this.down\n                    }\n                }\n                y = x - k;\n\n                while (x < aend && y < bend && this.eqlFn(this.a[x], this.b[y])) {\n                    x++;\n                    y++; // diagonal\n                }\n                this.down[k] = x;\n\n                if (deltaOdd && kup - D < k && k < kup + D && this.up[k] <= this.down[k]) {\n                    return {\n                        x: this.down[k],\n                        y: this.down[k] - k,\n                        u: this.up[k],\n                        v: this.up[k] - k,\n                    };\n                }\n            }\n\n            // reverse path\n            for (k = kup - D; k <= kup + D; k += 2) {\n                if (k === kup + D) {\n                    x = this.up[k - 1]; // this.up\n                } else {\n                    x = this.up[k + 1] - 1; // left\n                    if (k > kup - D && this.up[k - 1] < x) {\n                        x = this.up[k - 1]; // this.up\n                    }\n                }\n                y = x - k;\n\n                while (x > astart && y > bstart && this.eqlFn(this.a[x - 1], this.b[y - 1])) {\n                    x--;\n                    y--; // diagonal\n                }\n                this.up[k] = x;\n\n                if (!deltaOdd && kdown - D <= k && k <= kdown + D && this.up[k] <= this.down[k]) {\n                    return {\n                        x: this.down[k],\n                        y: this.down[k] - k,\n                        u: this.up[k],\n                        v: this.up[k] - k,\n                    };\n                }\n            }\n        }\n\n        throw new Error(\"Unexpected state!\");\n    }\n}\n", "import { ApplicationMenu } from \"./ApplicationMenu\";\nimport { MenuItem } from \"./MenuItem\";\nimport { MenuLabel } from \"./MenuLabel\";\nimport { IMenuItem, IMenuLabel, MenuLike, TMenuLike } from \"./types\";\nimport { Diff, EditToken } from \"./Diff\";\n\nexport class MenuUpdater {\n    public static run(appMenu: ApplicationMenu): number {\n        const template: Partial<IMenuLabel>[] = JSON.parse(\n            JSON.stringify((atom.menu as any).template)\n        );\n\n        if (!(template instanceof Array)) {\n            console.error(\"MenuUpdater: Menu template is malformed! Cannot perform menu update.\");\n            return 0;\n        }\n\n        template.some((o) => {\n            if (o.label === \"&Packages\") {\n                o.submenu?.sort((a, b) => {\n                    if (a.label !== undefined && b.label !== undefined) {\n                        const aL = a.label.toLowerCase(),\n                            bL = b.label.toLowerCase();\n                        if (aL < bL) return -1;\n                        if (aL > bL) return 1;\n                    }\n                    return 0;\n                });\n                return true;\n            }\n            return false;\n        });\n\n        return MenuUpdater.recurse(appMenu, appMenu.getLabels(), template);\n    }\n\n    private static recurse(\n        parent: ApplicationMenu | MenuLike,\n        a: MenuLike[],\n        b: Partial<TMenuLike>[]\n    ) {\n        let edits = 0;\n        const diff = new Diff<typeof a[0], typeof b[0]>(a, b, MenuUpdater.equals);\n        const editscript = diff.createEditScript();\n        edits += MenuUpdater.execEditScript(parent, a, b, editscript);\n\n        a.forEach((o, i) => {\n            const aSub = o.getSubmenu(),\n                bSub = b[i].submenu;\n            if (aSub !== undefined) {\n                if (!(bSub instanceof Array)) {\n                    console.error(\"MenuUpdater: malformed menu template item!\", b[i]);\n                    return;\n                }\n                edits += MenuUpdater.recurse(o, aSub, bSub);\n            }\n        });\n\n        return edits;\n    }\n\n    private static execEditScript(\n        parent: ApplicationMenu | MenuLike,\n        a: MenuLike[],\n        b: Partial<TMenuLike>[],\n        script: EditToken[]\n    ): number {\n        let ai = 0,\n            bi = 0,\n            edits = script.length;\n        script.forEach((opr) => {\n            switch (opr) {\n                case EditToken.NOOP:\n                    ai++, bi++;\n                    edits--;\n                    return;\n\n                case EditToken.DELETE:\n                    if (parent instanceof ApplicationMenu) {\n                        parent.removeLabel(ai);\n                    } else {\n                        parent.removeChild(ai);\n                    }\n                    break;\n\n                case EditToken.INSERT:\n                    if (parent instanceof ApplicationMenu) {\n                        const newItem = MenuLabel.createMenuLabel(b[bi] as IMenuLabel);\n                        parent.insertLabel(newItem, ai++);\n                    } else {\n                        const newItem = MenuItem.createMenuItem(b[bi] as IMenuItem);\n                        parent.insertChild(newItem, ai++);\n                    }\n                    bi++;\n                    break;\n\n                case EditToken.REPLACE:\n                    if (parent instanceof ApplicationMenu) {\n                        parent.removeLabel(ai);\n                        const newItem = MenuLabel.createMenuLabel(b[bi] as IMenuLabel);\n                        parent.insertLabel(newItem, ai++);\n                    } else {\n                        parent.removeChild(ai);\n                        const newItem = MenuItem.createMenuItem(b[bi] as IMenuItem);\n                        parent.insertChild(newItem, ai++);\n                    }\n                    break;\n            }\n        });\n\n        return edits;\n    }\n\n    private static equals(a: MenuLike | undefined, b: Partial<TMenuLike> | undefined): boolean {\n        if (a === undefined || b === undefined) {\n            return false;\n        }\n\n        if (a instanceof MenuLabel) {\n            return a.getLabelText() === b.label;\n        }\n\n        if (a instanceof MenuItem) {\n            if (a.isSeparator()) {\n                return (b as IMenuItem).type === \"separator\";\n            }\n            if (a.getCommand() !== undefined) {\n                return a.getCommand() === (b as IMenuItem).command;\n            }\n            return a.getLabelText() === (b as IMenuItem).label;\n        }\n\n        return false;\n    }\n}\n", "export const config = {\n    general: {\n        order: 1,\n        type: \"object\",\n        title: \"General\",\n        properties: {\n            displayTitleBar: {\n                order: 1,\n                title: \"Display Title Bar\",\n                description: \"Determines whether or not the title bar should be displayed by default.\",\n                type: \"boolean\",\n                default: true\n            },\n            displayMenuBar: {\n                order: 2,\n                title: \"Display Menu Bar\",\n                description: \"Determines whether or not the menu bar should be displayed by default. Overridden by 'Auto Hide'.\",\n                type: \"boolean\",\n                default: true\n            },\n            openAdjacent: {\n                order: 3,\n                title: \"Open Adjacent Categories On Hover\",\n                description: \"Opens adjacent menu categories on mouse hover as long as a menu category is already open.\",\n                type: \"boolean\",\n                default: true\n            },\n            autoHide: {\n                order: 4,\n                title: \"Auto Hide Menu Bar\",\n                description: \"Automatically hide the menu bar and toggle it by pressing Alt. Overrides 'Display Menu Bar'.\",\n                type: \"boolean\",\n                default: false\n            },\n            hideFullscreenTitle: {\n                order: 5,\n                title: \"Hide Title Bar in Fullscreen\",\n                type: \"boolean\",\n                default: true\n            },\n            altGivesFocus: {\n                order: 6,\n                title: \"Alt Gives Focus\",\n                description: \"Releasing the alt key gives focus to the application menu.\",\n                type: \"boolean\",\n                default: true\n            },\n            menuBarMnemonics: {\n                order: 7,\n                title: \"Menu Bar Mnemonics\",\n                description: \"Controls whether the application menu can be navigated with alt-key shortcuts.\",\n                type: \"boolean\",\n                default: true\n            },\n        }\n    },\n    colors: {\n        order: 2,\n        type: \"object\",\n        title: \"Appearance\",\n        properties: {\n            autoSelectColor: {\n                order: 1,\n                title: \"Automatically Select Title Bar Colors\",\n                description: \"The ui-variables will be used as a base for the title bar design. <br/>If you untick this option you can use the following colors as a base:\",\n                type: \"boolean\",\n                default: true\n            },\n            baseColor: {\n                order: 2,\n                title: \"Base Color\",\n                description: \"Color of the title bar background\",\n                type: \"color\",\n                default: \"#212326\"\n            },\n            highlightColor: {\n                order: 3,\n                title: \"Highlight Color\",\n                description: \"Color of the highlighted fields in the menu bar\",\n                type: \"color\",\n                default: \"#3A465B\"\n            },\n            textColor: {\n                order: 4,\n                title: \"Text Color\",\n                description: \"Base  for text and icons in the title bar\",\n                type: \"color\",\n                default: \"#a1adad\"\n            },\n            style: {\n                order: 5,\n                title: \"Style\",\n                type: \"string\",\n                enum: [\n                    \"Spacious\",\n                    \"Compact\"\n                ],\n                default: \"Compact\"\n            },\n            controlTheme: {\n                order: 6,\n                title: \"Window Controls Theme\",\n                type: \"string\",\n                enum: [\n                    \"Windows 10\",\n                    \"Arc\",\n                    \"Yosemite\",\n                    \"Legacy\"\n                ],\n                default: \"Windows 10\"\n            },\n            controlLocation: {\n                order: 7,\n                title: \"Reverse Window Controls Location\",\n                type: \"boolean\",\n                default: false\n            }\n        }\n    },\n};\n"],
  "mappings": "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",
  "names": []
}
